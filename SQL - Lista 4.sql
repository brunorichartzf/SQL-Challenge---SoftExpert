--A)O nome de todos os itens que já foram pedidos (fazer uma versão com
--DISTINCT e uma com GROUP BY);

SELECT DISTINCT PRODUCT.NMPRODUCT FROM PRODUCT
INNER JOIN PRODUCTREQUEST ON PRODUCT.CDPRODUCT = PRODUCTREQUEST.CDPRODUCT;

SELECT PRODUCT.NMPRODUCT FROM PRODUCT
INNER JOIN PRODUCTREQUEST ON PRODUCT.CDPRODUCT = PRODUCTREQUEST.CDPRODUCT GROUP BY PRODUCT.NMPRODUCT;

--B)O nome do produto, o número de vezes que ele foi pedido e a quantidade total
--pedida;

SELECT PRODUCT.NMPRODUCT, COUNT(PRODUCTREQUEST.CDPRODUCT) AS TIMESREQUESTED, SUM(PRODUCTREQUEST.QTAMOUNT) AS AMOUNTREQUESTED FROM PRODUCT
INNER JOIN PRODUCTREQUEST ON PRODUCT.CDPRODUCT = PRODUCTREQUEST.CDPRODUCT GROUP BY PRODUCT.NMPRODUCT;

--C)O nome do fornecedor, o total em estoque dos produtos fornecidos pelo
--fornecedor, a média de preço dos produtos fornecidos e quantos produtos ele
--fornece;

SELECT SUPPLIER.NMSUPPLIER, SUM(PRODUCT.QTSTOCK) AS TOTALSTOCKAMOUNT, SUM(PRODUCT.VLPRICE) / COUNT(PRODUCT.CDPRODUCT) AS AVERAGEPRICE, COUNT(PRODUCT.CDPRODUCT) AS TYPESOFPRODUCTS
FROM SUPPLIER INNER JOIN PRODUCT ON SUPPLIER.CDSUPPLIER = PRODUCT.CDSUPPLIER GROUP BY SUPPLIER.NMSUPPLIER;

--D)O nome do cliente, seu telefone, o valor da maior compra, o valor da menor
--compra, o total comprado e a média de valor comprado, ordenado por maior
--compra decrescente;

SELECT CUSTOMER.NMCUSTOMER, CUSTOMER.IDFONE, MAX(REQUEST.VLTOTAL) AS HIGHESTPURCHASEVALUE, MIN(REQUEST.VLTOTAL) AS LOWESTPURCHASEVALUE, 
SUM(REQUEST.VLTOTAL) AS TOTALPURCHASED, SUM(REQUEST.VLTOTAL) / COUNT(REQUEST.VLTOTAL) AS AVERAGEPURCHASEVALUE
FROM CUSTOMER INNER JOIN REQUEST ON CUSTOMER.CDCUSTOMER = REQUEST.CDCUSTOMER GROUP BY CUSTOMER.NMCUSTOMER, CUSTOMER.IDFONE ORDER BY HIGHESTPURCHASEVALUE DESC;

--E)A data do pedido, o nome do cliente, quantos produtos distintos ele pediu, o
--valor total do pedido (baseado nos valores da tabela productrequest), a média
--de valores do pedido (baseado nos valores da tabela productrequest)
--ordenado pela quantidade de produtos distintos pedidos;

SELECT REQUEST.DTREQUEST, CUSTOMER.NMCUSTOMER, COUNT(PRODUCTREQUEST.CDPRODUCT) AS DISTINCTPRODUCTS, SUM(PRODUCTREQUEST.QTAMOUNT * PRODUCTREQUEST.VLUNITARY) AS TOTALVALUE, 
SUM(PRODUCTREQUEST.QTAMOUNT * PRODUCTREQUEST.VLUNITARY) / COUNT(PRODUCTREQUEST.CDPRODUCT) AS VALUEAVERAGE
FROM CUSTOMER INNER JOIN REQUEST ON CUSTOMER.CDCUSTOMER = REQUEST.CDCUSTOMER
INNER JOIN PRODUCTREQUEST ON REQUEST.CDREQUEST = PRODUCTREQUEST.CDREQUEST GROUP BY REQUEST.DTREQUEST, CUSTOMER.NMCUSTOMER ORDER BY DISTINCTPRODUCTS;

--F)O nome do fornecedor e quantos produtos ele fornece, para todos os
--fornecedores que fornecem mais que um produto;

SELECT SUPPLIER.NMSUPPLIER, COUNT(PRODUCT.CDSUPPLIER) AS PRODUCTSSUPPLIED 
FROM SUPPLIER INNER JOIN PRODUCT ON SUPPLIER.CDSUPPLIER = PRODUCT.CDSUPPLIER GROUP BY SUPPLIER.NMSUPPLIER HAVING COUNT(PRODUCT.CDSUPPLIER) > 1;

--G)O nome do produto, o número de vezes que ele foi pedido e a quantidade total
--pedida para produtos que foram pedidos menos que 2 vezes;

SELECT PRODUCT.NMPRODUCT, COUNT(PRODUCTREQUEST.CDPRODUCT) AS TIMESORDERED, SUM(PRODUCTREQUEST.QTAMOUNT) AS TOTALAMOUNTORDERED
FROM PRODUCT 
INNER JOIN PRODUCTREQUEST ON PRODUCT.CDPRODUCT = PRODUCTREQUEST.CDPRODUCT GROUP BY PRODUCT.NMPRODUCT HAVING COUNT(PRODUCTREQUEST.CDPRODUCT) >= 2;

--H)O nome do cliente, o produto, o valor gasto com o produto, quantas vezes ele
--foi pedido pelo cliente e o nome do fornecedor. Somente para produtos em
--que o cliente gastou mais de R$1.000,00, ordenado por cliente e produto.

SELECT CUSTOMER.NMCUSTOMER, PRODUCT.NMPRODUCT, SUM(PRODUCTREQUEST.QTAMOUNT) * PRODUCTREQUEST.VLUNITARY AS AMOUNTSPENT, COUNT(PRODUCTREQUEST.CDPRODUCT) AS TIMESORDERED, SUPPLIER.NMSUPPLIER
FROM CUSTOMER INNER JOIN REQUEST ON CUSTOMER.CDCUSTOMER = REQUEST.CDCUSTOMER
INNER JOIN PRODUCTREQUEST ON REQUEST.CDREQUEST = PRODUCTREQUEST.CDREQUEST
INNER JOIN PRODUCT ON PRODUCTREQUEST.CDPRODUCT = PRODUCT.CDPRODUCT
INNER JOIN SUPPLIER ON PRODUCT.CDSUPPLIER = SUPPLIER.CDSUPPLIER GROUP BY CUSTOMER.NMCUSTOMER, PRODUCT.NMPRODUCT, SUPPLIER.NMSUPPLIER,PRODUCTREQUEST.VLUNITARY
HAVING SUM(PRODUCTREQUEST.QTAMOUNT) * PRODUCTREQUEST.VLUNITARY > 1000
ORDER BY CUSTOMER.NMCUSTOMER, PRODUCT.NMPRODUCT;