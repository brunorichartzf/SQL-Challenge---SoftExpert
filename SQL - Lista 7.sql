--A)Excluindo todos os pedidos que forem menores que R$ 1.000,00, que não
--possuam itens cadastrados e que sejam no mês de junho/2003;

BEGIN TRANSACTION;

DELETE FROM REQUEST WHERE REQUEST.VLTOTAL < 1000 
AND NOT EXISTS (SELECT * FROM PRODUCTREQUEST WHERE REQUEST.CDREQUEST = PRODUCTREQUEST.CDREQUEST)
AND REQUEST.DTREQUEST BETWEEN '2003-06-01' AND '2003-06-30' ;

COMMIT;

--B)Atualizando o preço do produto como sendo a média dos valores unitários de
--venda, somente para produtos que venderam menos que 800 unidades;

BEGIN TRANSACTION;

UPDATE PRODUCT 
SET VLPRICE = (SELECT AVG(VLUNITARY)
FROM PRODUCTREQUEST WHERE PRODUCTREQUEST.CDPRODUCT = PRODUCT.CDPRODUCT GROUP BY CDPRODUCT)
FROM PRODUCTREQUEST WHERE (SELECT SUM(QTAMOUNT)
FROM PRODUCTREQUEST WHERE PRODUCT.CDPRODUCT = PRODUCTREQUEST.CDPRODUCT) < 800;

COMMIT;

--C)Inserindo os fornecedores como clientes. Utilize como código o valor máximo
--mais o código do fornecedor para gerar o código do novo cliente criado a partir
--do fornecedor;

BEGIN TRANSACTION;

INSERT INTO CUSTOMER (CDCUSTOMER, NMCUSTOMER, IDFONE, NMADRESS)
SELECT MAX(CUSTOMER.CDCUSTOMER)+1 + SUPPLIER.CDSUPPLIER, SUPPLIER.NMSUPPLIER, SUPPLIER.IDFONE, 'DESCONHECIDO'
FROM SUPPLIER INNER JOIN PRODUCT ON SUPPLIER.CDSUPPLIER = PRODUCT.CDSUPPLIER
INNER JOIN PRODUCTREQUEST ON PRODUCT.CDPRODUCT = PRODUCTREQUEST.CDPRODUCT
INNER JOIN REQUEST ON PRODUCTREQUEST.CDREQUEST = REQUEST.CDREQUEST
INNER JOIN CUSTOMER ON REQUEST.CDCUSTOMER = CUSTOMER.CDCUSTOMER GROUP BY SUPPLIER.CDSUPPLIER, SUPPLIER.NMSUPPLIER, SUPPLIER.IDFONE;

COMMIT;

--D)Atualizando a data de entrega do pedido como sendo a data do pedido + 30
--dias para pedidos em que a diferença entre essas duas datas seja menor que
--10 dias e o cliente tenha comprado menos que R$ 10.000,00.

BEGIN TRANSACTION;

UPDATE REQUEST 
SET DTDELIVER = DATEADD(DAY, 30 , DTREQUEST) WHERE DATEDIFF(DAY,DTREQUEST, DTDELIVER) <  10 AND VLTOTAL < 10000

COMMIT;